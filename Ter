pipeline {
    agent any

    environment {
        DOMAIN = "creditscope.bbh.com"
        PORT = "443"
        PROXY = "tstproxy.bbh.com:9090"
        PROXY_USER = "yourProxyUser"
        PROXY_PASS = "yourSecretPassword"
        EXPIRY_THRESHOLD = 30
    }

    stages {
        stage('Check SSL Expiry via Proxy') {
            steps {
                script {
                    def expiry = sh(script: """
                        curl -Iv https://$DOMAIN \
                          --proxy http://$PROXY_USER:$PROXY_PASS@$PROXY 2>&1 | grep -i 'expire' || true
                    """, returnStdout: true).trim()

                    echo "📅 Raw Expiry Output: $expiry"

                    def expiryDate = expiry.find(/expire date: (.*)/) { _, date -> return date }?.trim()
                    if (expiryDate) {
                        def expiryEpoch = sh(script: "date -d '$expiryDate' +%s", returnStdout: true).trim().toLong()
                        def nowEpoch = sh(script: "date +%s", returnStdout: true).trim().toLong()
                        def daysLeft = ((expiryEpoch - nowEpoch) / 86400).toInteger()

                        echo "🔒 Certificate for $DOMAIN expires in $daysLeft days"

                        if (daysLeft <= EXPIRY_THRESHOLD.toInteger()) {
                            error "❌ Certificate is expiring in $daysLeft days!"
                        }
                    } else {
                        error "❌ Failed to retrieve expiry date."
                    }
                }
            }
        }
    }
}
